export TERM=xterm-256color

# Path to oh-my-zsh configuration
export ZSH=$HOME/.oh-my-zsh

# Zsh theme and plugins
ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=(
  git
  alias-tips
  zsh-autosuggestions
  zsh-syntax-highlighting
  git-flow
)

source $ZSH/oh-my-zsh.sh

# CLI Utilities Setup

# zoxide
eval "$(zoxide init zsh)"

# base16-shell
# Comment this section out if you want to activate the Dracula theme from iTerm2
# BASE16_SHELL=$HOME/.config/base16-shell/
# [ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules}/*" 2> /dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# ALIASES

bindkey "^ " forward-word
alias gpom="gp origin master"
alias glom="gl origin master"
alias glod="gl origin devel"
alias gpot="gp origin --tags"
alias cat="bat"
alias speed="speedtest-cli"
alias notify="tput bel"

# Enable exa instead of ls, if it is installed
if [ "$(command -v exa)" ]; then
    unalias -m 'll'
    unalias -m 'l'
    unalias -m 'la'
    unalias -m 'ls'
    alias ll='exa -l --color always --icons -a -s type'
    alias l='exa -l --color always --icons -a -s type'
    alias la='exa -l --color always --icons -a -s type'
    alias ls='exa -G  --color auto --icons -a -s type'
fi

# Theme config
DEFAULT_USER=$USER
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir_writable dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()
POWERLEVEL9K_SHORTEN_DIR_LENGTH=1
POWERLEVEL9K_SHORTEN_STRATEGY="truncate_from_right"
POWERLEVEL9K_SHORTEN_DELIMITER=""

# Checks iTerm2 shell integration
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Node global commands path
export PATH=/usr/local/Cellar/node/15.12.0/bin:$PATH

# React-Native env variables
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

# PHP env variables
export PATH=/usr/local/opt/php@7.4/bin:$PATH
export PATH=/usr/local/opt/php@7.4/sbin:$PATH

# Custom commands

# Generic purpose

propic() {
    echo ">>>> downloading propic <<<<"
    curl -o propic.jpeg "https://gravatar.com/avatar/3d2746ae6d5b422213088b12ebab1131?s=1000"
}

# Hoppscotch

hoppscotch() {
    echo ">>>> starting hoppscotch <<<<"
    if (( $# == 0 ))
    then HOPPSCOTCH_PORT=3000
    else HOPPSCOTCH_PORT=$1
    fi
    docker run --detach --rm --name hoppscotch -p $HOPPSCOTCH_PORT:3000 hoppscotch/hoppscotch:latest
    open http://localhost:$HOPPSCOTCH_PORT/
}

hoppscotch_stop() {
    echo ">>>> stopping hoppscotch <<<<"
    docker stop hoppscotch
}

# Mobile development

clean_derived_data() {
    echo ">>>> cleaning Xcode DerivedData folder <<<<"
    rm -rf ~/Library/Developer/Xcode/DerivedData
}

# React Native

clean_rn_ios() {
    echo ">>>> clean_rn_ios <<<<"
    echo ">>>> yarn install, pod install and run on iOS <<<<"
    yarn
    cd ios
    pod install
    cd ..
    yarn ios
}

clean_rn_android() {
    echo ">>>> clean_rn_android <<<<"
    echo ">>>> yarn install, clear Gradle cache and run on Android <<<<"
    yarn
    cd android
    ./gradlew clean
    ./gradlew cleanBuildCache
    cd ..
    yarn android
}

clean_rn_cache() {
    echo ">>>> clean_rn_cache <<<<"
    watchman watch-del-all
    rm -rf node_modules
    yarn
    clean_derived_data
    rm -rf /tmp/metro-*
    yarn start --reset-cache
}

# Flutter Web

flutter_web_deploy() {
    echo ">>>> flutter_web_deploy <<<<"
    echo ">>>> build and deploy Flutter Web on Firebase hosting <<<<"
    flutter build web
    cd build/web
    firebase deploy
    cd ../..
}

eval "$(rbenv init -)"
